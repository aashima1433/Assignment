let express,registerController,loginController,queController,voteController,ansController;_cb7‍.x([["default",()=>_cb7‍.o]]);_cb7‍.w("express",[["default",["express"],function(v){express=v}]]);_cb7‍.w("../controllers/registerController",[["default",["registerController"],function(v){registerController=v}]]);_cb7‍.w("../controllers/loginController",[["default",["loginController"],function(v){loginController=v}]]);_cb7‍.w("../controllers/queController",[["default",["queController"],function(v){queController=v}]]);_cb7‍.w("../controllers/voteController",[["default",["voteController"],function(v){voteController=v}]]);_cb7‍.w("../controllers/ansController",[["default",["ansController"],function(v){ansController=v}]]);
const router = express.Router();






router.post('/register',registerController.register)
router.post('/login',loginController.login)
router.post('/addquestion/:id',queController.postque)
router.post('/addanswer/:id/:userid',ansController.postans)
router.put('/vote', voteController.vote)
router.put('/updatequestion/:id',queController.updateque)
router.get('/getque/:id',queController.getque)
router.get('/showAllanswers/:id',ansController.showallans)
router.get('/getall/:tag',queController.getall)
router.get('/getallquebyuser/:id',queController.getallquebyuser)
router.get('/pendingquestions/:id',queController.pendingque)

_cb7‍.d(router);