let express,registerController,loginController,queController,voteController,ansController,auth;_b7b‍.x([["default",()=>_b7b‍.o]]);_b7b‍.w("express",[["default",["express"],function(v){express=v}]]);_b7b‍.w("../controllers/registerController",[["default",["registerController"],function(v){registerController=v}]]);_b7b‍.w("../controllers/loginController",[["default",["loginController"],function(v){loginController=v}]]);_b7b‍.w("../controllers/queController",[["default",["queController"],function(v){queController=v}]]);_b7b‍.w("../controllers/voteController",[["default",["voteController"],function(v){voteController=v}]]);_b7b‍.w("../controllers/ansController",[["default",["ansController"],function(v){ansController=v}]]);_b7b‍.w("../middleware/auth",[["default",["auth"],function(v){auth=v}]]);
const router = express.Router();







router.post('/register',auth,registerController.register)
router.post('/login',auth,loginController.login)
router.post('/addquestion/:id',auth,queController.postque)
router.post('/addanswer/:id/:userid',auth,ansController.postans)
router.put('/vote',auth, voteController.vote)
router.put('/updatequestion/:id',auth,queController.updateque)
router.get('/getque/:id',auth,queController.getque)
router.get('/showAllanswers/:id',auth,ansController.showallans)
router.get('/getall/:tag',auth,queController.getall)
router.get('/getallquebyuser/:id',auth,queController.getallquebyuser)
router.get('/pendinganswers/:id',auth,queController.pendingans)
router.put('/acceptanswer/:ansid',auth,ansController.acceptans)



_b7b‍.d(router);